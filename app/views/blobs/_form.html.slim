= form_for [form], html: { class: "directUpload" } do |f|
  - if form.errors.any?
    #error_explanation
      h2 = "#{pluralize(form.errors.count, "error")} prohibited this blob from being saved:"
      ul
        - form.errors.full_messages.each do |message|
          li = message

  = f.fields_for :datum, @datum do |datum_form|
    .form-group
      = datum_form.label :title, class: 'control-label'
      = datum_form.text_field :title, class: 'form-control'

    .form-group
      = datum_form.label :description, class: 'control-label'
      = datum_form.text_area :description, class: 'form-control'

    .form-group
      = datum_form.label :price, class: 'control-label'
      .input-group
        span.input-group-addon $
        = datum_form.number_field :price, in: 0..10_000.0, step: 0.01, class: 'form-control'

  .form-group
    = f.label :file, class: 'control-label'
    .input-group
      span.input-group-btn
        span.btn.btn-default.btn-file
          > Browse&hellip;
          = f.file_field :blob_url
      input.form-control type="text" readonly=""

  .actions = f.submit class: 'form-control btn-primary'

javascript:
  $(function() {
    $('.directUpload').find("input:file").each(function(i, elem) {
      var fileInput    = $(elem);
      var form         = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar  = $("<div class='bar'></div>");
      var barContainer = $("<div class='progress'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
        fileInput:       fileInput,
        url:             '#{@s3_direct_post.url}',
        type:            'POST',
        autoUpload:       true,
        formData:         #{@s3_direct_post.fields.to_json.html_safe},
        paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          progressBar.css('width', progress + '%')
        },
        start: function (e) {
          submitButton.prop('disabled', true);

          progressBar.
            css('background', 'green').
            css('display', 'block').
            css('width', '0%').
            text("Loading...");
        },
        done: function(e, data) {
          submitButton.prop('disabled', false);
          progressBar.text("Uploading done");

          // extract key and generate URL from response
          var key   = $(data.jqXHR.responseXML).find("Key").text();
          var url   = '//#{@s3_direct_post.url.host}/' + key;

          // create hidden field
          var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
          form.append(input);
        },
        fail: function(e, data) {
          submitButton.prop('disabled', false);

          progressBar.
            css("background", "red").
            text("Failed");
        }
      });
    });
  });
